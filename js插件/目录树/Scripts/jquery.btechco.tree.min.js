var a = null, d = !1; function f() { return function () { } } var g = jQuery; $treedatatype = { t: 1, G: 2 }; $treedataformat = { F: 1, s: 2 }; var h = { l: a, url: a, async: d, dataset: a, q: $treedatatype.t, p: $treedataformat.s, i: "ui-icon-folder-collapsed", j: "ui-icon-folder-open", v: "ui-icon-document", o: d, n: "ui-state-highlight", u: "ui-icon-plusthick", w: "ui-icon-minusthick", C: d, B: d, D: d, A: "Are you sure you want to remove this node?", X: f(), Q: f(), T: f(), R: f(), S: f(), O: f(), M: f(), V: f(), U: f(), P: f(), N: f(), W: f() }, q = h;
g.J.I = function (j) {
    function k(b, c) { for (var e = 0; e < b.length; e++) if (b[e].id == c.c) { 0 == b[e].b.length && (b[e].b = []); b[e].b.push(c); break } else b[e].b instanceof Object && k(b[e].b, c) } function m(b) {
        c = 0 == c.length ? c + "<ul style='list-style-type:none;'>" : c + "<ul style='list-style-type:none; display:none;'>"; g(b).e(function () {
            var b = 20; c += "<li nodeid='" + this.id + "'>"; c += "<span class='ui-icon "; c = this.d != a && 0 < this.d.length ? c + this.d : this.b != a && 0 < this.b.length ? q.o ? c + q.j : c + q.i : c + q.v; c += "' data-action='nav_items' style='position:absolute; margin-top:1px;'></span>";
            if (this.g || this.g == a && q.C) c += "<input type='checkbox' style='position:absolute; margin-top:1px;margin-left:" + b + "px;'></input>", b += 20; if (this.f || this.f == a && q.B) c += "<span class='ui-icon " + q.u + "' data-action='add' style='position:absolute; margin-top:1px;margin-left:" + b + "px;'></span>", b += 20; if (this.h || this.h == a && q.D) c += "<span class='ui-icon " + q.w + "' data-action='remove' style='position:absolute; margin-top:1px;margin-left:" + b + "px;'></span>", b += 20; this.href && (c += "<a href='" + this.href + "' target='" + this.target +
            "'>"); c += "<span style='margin-left:" + b + "px;' data-action='text'>" + this.name + "</span>"; this.href && (c += "</a>"); c += "</li>"; this.b != a && 0 < this.b.length && m(this.b)
        }); c += "</ul>"
    } function n(b) { g(b).parent().next("ul").toggle() } function p(b) { g(b).e(function () { g(this).z(q.j) ? (g(this).r(q.j), g(this).m(q.i)) : g(this).z(q.i) ? (g(this).r(q.i), g(this).m(q.j)) : g.L() }) } function l(b, c) { g("#" + q.l + " ul li span[data-action='text']").r(q.n); c && g(b).parent().find("span[data-action='text']").m(q.n) } function r(b, c) {
        g(b).e(function () {
            if (this.id ==
            c) return b.splice(this, 1), d; 0 < this.b.length && m(this.b)
        })
    } q = g.extend({}, h, j); var e = [], c = ""; if (q.url != a && 0 < q.url.length) { j = ""; switch (q.q) { case 1: j = "json"; break; case 2: j = "xml" } g.H({ type: "GET", async: q.async, url: q.url, dataType: j, Z: function (b) { q.dataset = b }, error: f() }) } switch (q.q) {
        case 1: switch (q.p) {
            case 1: g(q.dataset[0].root).e(function () { var b = { id: this.id, name: this.name, c: this.c, href: this.href, target: this.target, g: this.g, f: this.f, h: this.h, d: this.d, b: [] }; 0 == e.length || 0 == b.c ? e.push(b) : k(e, b) }); break; case 2: e =
            q.dataset[0].root
        } break; case 2: switch (q.p) {
            case 1: g(q.dataset).find("node").e(function () { var b = { id: g(this).a("id"), name: g(this).a("name"), c: g(this).a("parentid"), href: g(this).a("href"), target: g(this).a("target"), g: g(this).a("buttoncheck") == a ? d : g(this).a("buttoncheck"), f: g(this).a("buttonadd") ? d : g(this).a("buttonadd"), h: g(this).a("buttonremove") ? d : g(this).a("buttonremove"), d: g(this).a("classnodeicon"), b: [] }; 0 == e.length || 0 == b.c ? e.push(b) : k(e, b) }); break; case 2: g(q.dataset).find("node").e(function () {
                var b =
                { id: g(this).a("id"), name: g(this).a("name"), c: g(this).parent().a("id") == a ? 0 : g(this).parent().a("id"), href: g(this).a("href"), target: g(this).a("target"), g: g(this).a("buttoncheck") == a ? d : g(this).a("buttoncheck"), f: g(this).a("buttonadd") ? d : g(this).a("buttonadd"), h: g(this).a("buttonremove") ? d : g(this).a("buttonremove"), d: g(this).a("classnodeicon"), b: [] }; 0 == e.length || 0 == b.c ? e.push(b) : k(e, b)
            })
        }
    } m(e); g("#" + q.l).append(c); j = g("#" + q.l + "> ul > li > span:nth-child(1)"); p(j); n(j); q.o && (p(j), n(j)); g("li").k("span[data-action='nav_items']",
    "click", function () { p(this); n(this) }); g("li").k("span[data-action='text']", "click", function () { g(this).parent().a("nodeid"); l(this, !0) }); g("li").k("input[type='checkbox']", "click", function () { var b = g(this).K(":checked"); g(this).parent("li").next("ul").find("input[type='checkbox']").e(function () { g(this).Y("checked", b) }) }); g("li").k("span[data-action='add']", "click", function () { l(this, !0) }); g("li").k("span[data-action='remove']", "click", function () {
        l(this, !0); if (confirm(q.A)) {
            var b = g(this).parent().a("nodeid");
            r.call(e, b)
        } else l(this, d)
    })
};
